DROP TABLE CLIENTE CASCADE CONSTRAINTS;
CREATE TABLE CLIENTE(
ID_CLIENTE INT,
CPF CHAR(11),
NOME CHAR(15),
SOBRENOME VARCHAR(40),
TITULO_TRATAMENTO CHAR (3),
DT_NASCIMENTO DATE,
SEXO CHAR(1),
END_RUA CHAR(30),

END_NUM CHAR(5),
END_CIDADE CHAR(20),
END_BAIRRO CHAR(15),
END_ESTADO CHAR(2),
END_PAIS CHAR(20),
END_CEP CHAR(7),
TELEFONE CHAR(11),
EMAIL CHAR(50),
BONUS NUMERIC (6,2),
PRIMARY KEY (ID_CLIENTE),
CONSTRAINT CHK_BONUS_CLIENTE CHECK (BONUS >= 0)
);
DROP TABLE DEPENDENTE CASCADE CONSTRAINTS;
CREATE TABLE DEPENDENTE(
ID_DEP INT,
ID_CLIENTE INT,
NOME CHAR(50),
SEXO CHAR (2),
DT_NASC DATE,
PRIMARY KEY (ID_DEP, ID_CLIENTE),
FOREIGN KEY (ID_CLIENTE) REFERENCES
CLIENTE(ID_CLIENTE) ON DELETE CASCADE
);

DROP TABLE EMPREGADO CASCADE CONSTRAINTS;

CREATE TABLE EMPREGADO (
MATRICULA INT,

NOME CHAR(50),
FUNCAO CHAR(15),
DT_NASCIMENTO DATE,
DT_CONTRATO DATE,
ENDEREÇO CHAR(100),
SALARIO NUMERIC (7,2),
SUPERVISOR INT,
PRIMARY KEY (MATRICULA),
FOREIGN KEY (SUPERVISOR) REFERENCES EMPREGADO
(MATRICULA) ON DELETE SET NULL
);

DROP TABLE TELEFONES_EMP CASCADE CONSTRAINTS;

CREATE TABLE TELEFONES_EMP (
MATRICULA INT,
NUMERO CHAR(15),
PRIMARY KEY (MATRICULA, NUMERO)
);

DROP TABLE REGIAO CASCADE CONSTRAINTS;

CREATE TABLE REGIAO (
ID_REGIAO INT,
NOME VARCHAR(15),
PRIMARY KEY (ID_REGIAO)
);

DROP TABLE EMP_ATUA_REGIAO CASCADE CONSTRAINTS;

CREATE TABLE EMP_ATUA_REGIAO (
MATRICULA INT,
ID_REGIAO INT,
PRIMARY KEY (MATRICULA, ID_REGIAO),
FOREIGN KEY (MATRICULA) REFERENCES
EMPREGADO(MATRICULA),
FOREIGN KEY(ID_REGIAO) REFERENCES REGIAO (ID_REGIAO)
);

DROP TABLE TRANSPORTADORA CASCADE CONSTRAINTS;

CREATE TABLE TRANSPORTADORA (
ID_TRANSP INT,
NOME VARCHAR(30),
EMAIL VARCHAR(30),
PRIMARY KEY (ID_TRANSP)
);

DROP TABLE TELEFONES_TRANSP CASCADE CONSTRAINTS;

CREATE TABLE TELEFONES_TRANSP (
ID_TRANSP INT,
NUMERO CHAR(11),
PRIMARY KEY(ID_TRANSP, NUMERO)
);

DROP TABLE FORNECEDOR CASCADE CONSTRAINTS;

CREATE TABLE FORNECEDOR (
ID_FORN INT,
NOME VARCHAR(30),
EMAIL VARCHAR(30),
ENDERECO CHAR(50),
TELEFONE CHAR(11),
HOMEPAGE CHAR(30),
PRIMARY KEY(ID_FORN)
);

DROP TABLE CATEGORIA CASCADE CONSTRAINTS;

CREATE TABLE CATEGORIA (
ID_CATEGORIA INT,
NOME VARCHAR(20),
PRIMARY KEY(ID_CATEGORIA)
);

DROP TABLE PRODUTO CASCADE CONSTRAINTS;

CREATE TABLE PRODUTO (
ID_PROD INT,
NOME CHAR(30),
PRECO_COMPRA NUMERIC (7,2),
MARGEM_LUCRO FLOAT,

DESCONTINUADO CHAR(1),
DT_FABRIC DATE,
DT_VALIDADE DATE,
ID_FORN INT,
ID_CATEGORIA INT,
PRIMARY KEY (ID_PROD),
FOREIGN KEY (ID_FORN) REFERENCES FORNECEDOR
(ID_FORN),
FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA
(ID_CATEGORIA)
);

DROP TABLE VENDA CASCADE CONSTRAINTS;

CREATE TABLE VENDA (
ID_VENDA INT,
DT_VENDA DATE NOT NULL,
FRETE NUMERIC (4,2),
ENDERECO_ENTREGA VARCHAR(100),
DT_ENTREGA DATE,
ID_TRANSP INT,
ID_CLIENTE INT NOT NULL,
MATRICULA INT,
PRIMARY KEY(ID_VENDA),
FOREIGN KEY (ID_TRANSP) REFERENCES TRANSPORTADORA
(ID_TRANSP),
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE
(ID_CLIENTE),
FOREIGN KEY (MATRICULA) REFERENCES EMPREGADO
(MATRICULA)

);

DROP TABLE ITENS_VENDA CASCADE CONSTRAINTS;

CREATE TABLE ITENS_VENDA (
ID_ITEM INT,
PRECO_UNITARIO NUMBER (7,2) NOT NULL,
QUANTIDADE INT NOT NULL,
DESCONTO FLOAT,
ID_VENDA INT,
ID_PROD INT,
PRIMARY KEY (ID_ITEM),
FOREIGN KEY (ID_VENDA) REFERENCES VENDA (ID_VENDA),
FOREIGN KEY (ID_PROD) REFERENCES PRODUTO (ID_PROD)
);

/* Questao 1 */
CREATE VIEW DESC_F AS
      SELECT c.NOME, c.ID_CLIENTE
      FROM CLIENTE c, (SELECT vp.ID_VENDA, v.ID_VENDA, v.ID_CLIENTE
                       FROM ITENS_VENDA vp, VENDA v
                       WHERE vp.DESCONTO > 20 AND vp.ID_VENDA = v.ID_VENDA) x
      WHERE SEXO = 'F' AND x.ID_CLIENTE = c.ID_CLIENTE

/* Questao 2 */
SELECT es.MATRICULA
FROM EMPREGADO e, EMPREGADO es, VENDA v, ITENS_VENDA iv, PRODUTO p, CATEGORIA c
WHERE EXTRACT(MONTH FROM V.DT_VENDA) = 05 AND
      c.NOME = 'Higiene' AND
      c.ID_CATEGORIA = p.ID_CATEGORIA AND
      p.ID_PROD = iv.ID_PROD AND
      iv.ID_VENDA = v.ID_VENDA AND
      v.MATRICULA = e.MATRICULA AND
      e.SUPERVISOR = es.MATRICULA

/* Questao 3 */
SELECT f.NOME
FROM FORNECEDOR f, PRODUTO p, (SELECT v.ID_PROD
                               FROM ITENS_VENDA v
                               WHERE v.QUANTIDADE = (SELECT MAX(QUANTIDADE) 
                         FROM ITENS_VENDA )) iv
WHERE p.ID_PROD = iv.ID_PROD AND f.ID_FORN =  p.ID_FORN    

/* Questao 4 */
CREATE VIEW VALORES_FRETES_ABRIL AS
    select  T.NOME as "Transportadora", 
            sum(V.FRETE) as "Valor dos Fretes"
    from TRANSPORTADORA T
    inner join VENDA V on T.ID_TRANSP = V.ID_TRANSP
    where (EXTRACT(MONTH from V.DT_ENTREGA) = 4 and EXTRACT(YEAR from V.DT_ENTREGA) = 2018)
    group by T.NOME

/* Questao 5 */
CREATE VIEW VIEW_CATEGORIA_VENDIDAS AS
    SELECT  C.NOME as "Categoria", 
            NVL(SUM(VENDIDO.PRECO_UNITARIO * VENDIDO.QUANTIDADE), 0) AS "Total Vendido"
    FROM CATEGORIA C
    INNER JOIN PRODUTO P ON C.ID_CATEGORIA = P.ID_CATEGORIA
    INNER JOIN ITENS_VENDA VENDIDO ON P.ID_PROD = VENDIDO.ID_PROD
    WHERE   (P.DT_VALIDADE <= TO_DATE('12-JUL-2018', 'DD-MON-YYYY'))
    GROUP BY C.NOME
    order by (SUM(VENDIDO.PRECO_UNITARIO * VENDIDO.QUANTIDADE)) DESC

/* Questao 6 */
SELECT CLI.ID_CLIENTE, cli.nome, SUM(I.QUANTIDADE * I.PRECO_UNITARIO) compras
FROM CLIENTE CLI
RIGHT OUTER JOIN VENDA V ON CLI.ID_CLIENTE = V.ID_CLIENTE
RIGHT OUTER JOIN ITENS_VENDA I ON V.ID_VENDA = I.ID_VENDA
group by cli.id_cliente, cli.nome
order by SUM(I.QUANTIDADE * I.PRECO_UNITARIO) desc

/* Questao 7 */
 select  ID_DEP as "COD",
         NOME AS "Dependente",
         DT_NASC AS "Dt Nasc", 
         SEXO as "Sexo"
from    DEPENDENTE
where   (EXTRACT(YEAR from DT_NASC) = 2005) and 
        (UPPER(NOME) LIKE '%SILVA%')
order by ID_DEP

/* Questao 8 */
SELECT  PROD.NOME AS "Produto"
FROM PRODUTO PROD
INNER JOIN ITENS_VENDA ITEM ON PROD.ID_PROD = ITEM.ID_PROD
INNER JOIN VENDA VENDA ON ITEM.ID_VENDA = VENDA.ID_VENDA
WHERE   (EXTRACT(YEAR FROM VENDA.DT_VENDA) != 2015 AND 
        EXTRACT(YEAR FROM VENDA.DT_VENDA) != 2016)
GROUP BY PROD.NOME

/* Questao 9 */
SELECT  CLI.ID_CLIENTE AS "ID_CLIENTE",
        NVL(SUM(ITEM.PRECO_UNITARIO * ITEM.QUANTIDADE), 0) as "TOTAL_GASTO"
FROM CLIENTE CLI
INNER JOIN VENDA VENDA ON CLI.ID_CLIENTE = VENDA.ID_CLIENTE
INNER JOIN ITENS_VENDA ITEM ON VENDA.ID_VENDA = ITEM.ID_VENDA
INNER JOIN PRODUTO PROD ON ITEM.ID_PROD = PROD.ID_PROD
INNER JOIN CATEGORIA CAT ON PROD.ID_CATEGORIA = CAT.ID_CATEGORIA
WHERE (CLI.END_BAIRRO = 'Prata' and CAT.NOME = 'Utensílios')
GROUP BY CLI.ID_CLIENTE

/* Questao 10 */
SELECT MATRICULA, NOME, FUNCAO, SALARIO
FROM EMPREGADO
WHERE SALARIO > (SELECT AVG(SALARIO)
                 FROM EMPREGADO);

/* Questao 12 */
CREATE OR REPLACE TRIGGER frete_bonus 
AFTER UPDATE OF DT_ENTREGA ON VENDA
FOR EACH ROW
WHEN (TRUNC(NEW.DT_ENTREGA - NEW.DT_VENDA) > 30)
DECLARE 
    bonus NUMBER(6, 2);
BEGIN
    SELECT BONUS INTO bonus
    FROM CLIENTE c
    WHERE c.ID_CLIENTE = :NEW.ID_CLIENTE;
    
    IF (bonus IS NULL) THEN
        UPDATE CLIENTE a
        SET a.BONUS = :NEW.FRETE
        WHERE a.ID_CLIENTE = :NEW.ID_CLIENTE;
    ELSE
        UPDATE CLIENTE a
        SET a.BONUS = a.BONUS + :NEW.FRETE
        WHERE a.ID_CLIENTE = :NEW.ID_CLIENTE;
    END IF;
END;

/* Questao 13 */
CREATE OR REPLACE VIEW PROD_DESCONT(NOMEP,NOMEF) AS
SELECT p.NOME, f.NOME
FROM PRODUTO p
LEFT JOIN FORNECEDOR f ON p.ID_FORN = f.ID_FORN
WHERE p.DESCONTINUADO ='S'
